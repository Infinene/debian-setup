
location ~ ^/sites/.*/private/ {
	return						403;
}

# Block access to scripts in site files directory
location ~ ^/sites/[^/]+/files/.*\.php$ {
	deny						all;
}

# Deny access to civicrm private/uploads directory
location ~* /(?:files/civicrm/custom|files/civicrm/upload)/.*$ {
	deny						all;
}

location @rewrite {
	rewrite						^ /index.php;
}
# Don't allow direct access to PHP files in the vendor directory.
location ~ /vendor/.*\.php$ {
	deny						all;
	return						404;
}

# Protect files and directories from prying eyes.
location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock)|web\.config)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
	deny						all;
	return						404;
}

##deny access to update and install for everyone except the server
location ^~ /update.php {
	allow 127.0.0.1;
	deny all;
}

location ~* \.(js|css|webp|png|jpg|jpeg|gif|ico|svg|pdf)$ {
	try_files		 			$uri @rewrite;
	expires						max;
	log_not_found				off;
}

# Fighting with Styles? This little gem is amazing.
location ~ ^/sites/.*/files/styles/ {
	try_files					$uri @rewrite;
}

# Handle private files through Drupal. Private file's path can come
# with a language prefix.
location ~ ^(/[a-z\-]+)?/system/files/ {
	try_files					$uri /index.php?$query_string;
}

# Enforce clean URLs
# Removes index.php from urls like www.example.com/index.php/my-page --> www.example.com/my-page
# Could be done with 301 for permanent or other redirect codes.
if ($request_uri ~* "^(.*/)index\.php/(.*)") {
	return						 307 $1$2;
}
