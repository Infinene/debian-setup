### nginx ###

if curl -s http://nginx.org/packages/debian/dists/ | grep $debian_release > /dev/null; then

	${SUDO} apt install gnupg2 debian-archive-keyring

	curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \
		| ${SUDO} tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null

	echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \
		http://nginx.org/packages/debian `lsb_release -cs` nginx" \
		| sudo tee /etc/apt/sources.list.d/nginx.list
fi

${SUDO} apt update
${SUDO} apt -y install nginx

${SUDO} cp -rbv $setup_dir/src/etc/nginx/* /etc/nginx
if [ -f /etc/nginx/conf.d/default.conf ]; then
	${SUDO} mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf~
fi

### create webroot ###
${SUDO} mkdir -p /srv/http/localsite
# printf "$(hostname) $(~//bin/get-ip)\n" | ${SUDO} tee /srv/http/localhost/index.html
${SUDO} cp -rv $setup_dir/src/localsite/* /srv/http/localsite/
${SUDO} ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/


### set permissions ###
$HOME//bin/chmodw /srv/http

### Generate self-signed certificate ###
$HOME//bin/gen-ssl-localhost

### Optionally install certbot ###
read -p  "Install certbot? [y/N] " certbot
if [ ${certbot,,} = 'y' ]; then
	echo "Installing certbot ..."
	$HOME//bin/get-certbot
else
	echo "certbot not installed. Use get-certbot to install later."
fi
